# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1.15.9
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes_asyncio.client
from kubernetes_asyncio.client.models.v1_initializers import V1Initializers  # noqa: E501
from kubernetes_asyncio.client.rest import ApiException

class TestV1Initializers(unittest.TestCase):
    """V1Initializers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1Initializers
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes_asyncio.client.models.v1_initializers.V1Initializers()  # noqa: E501
        if include_optional :
            return V1Initializers(
                pending = [
                    kubernetes_asyncio.client.models.v1/initializer.v1.Initializer(
                        name = '0', )
                    ], 
                result = kubernetes_asyncio.client.models.v1/status.v1.Status(
                    api_version = '0', 
                    code = 56, 
                    details = kubernetes_asyncio.client.models.v1/status_details.v1.StatusDetails(
                        causes = [
                            kubernetes_asyncio.client.models.v1/status_cause.v1.StatusCause(
                                field = '0', 
                                message = '0', 
                                reason = '0', )
                            ], 
                        group = '0', 
                        kind = '0', 
                        name = '0', 
                        retry_after_seconds = 56, 
                        uid = '0', ), 
                    kind = '0', 
                    message = '0', 
                    metadata = kubernetes_asyncio.client.models.v1/list_meta.v1.ListMeta(
                        continue = '0', 
                        remaining_item_count = 56, 
                        resource_version = '0', 
                        self_link = '0', ), 
                    reason = '0', 
                    status = '0', )
            )
        else :
            return V1Initializers(
                pending = [
                    kubernetes_asyncio.client.models.v1/initializer.v1.Initializer(
                        name = '0', )
                    ],
        )

    def testV1Initializers(self):
        """Test V1Initializers"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
